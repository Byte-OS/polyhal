var searchIndex = new Map(JSON.parse('[["example",{"t":"FJJJJHHNCNNHNCNNHHHCHNNNJJSHJHHHHHH","n":["PageAllocImpl","TEST_PERCPU","TIMER_TICKS","__PERCPU_TEST_PERCPU","__PERCPU_TIMER_TICKS","_polyhal_defined_main","_polyhal_defined_secondary","alloc","allocator","borrow","borrow_mut","check_percpu","dealloc","frame","from","into","kernel_interrupt","main","panic","pci","secondary","try_from","try_into","type_id","HEAP_ALLOCATOR","HEAP_SPACE","KERNEL_HEAP_SIZE","init_allocator","LOCK_FRAME_ALLOCATOR","add_frame_range","frame_alloc","frame_dealloc","dump_bar_contents","enumerate_pci","init"],"q":[[0,"example"],[24,"example::allocator"],[28,"example::frame"],[32,"example::pci"],[35,"polyhal::utils::percpu"],[36,"polyhal::utils::addr"],[37,"polyhal_trap::trapframe::x86_64"],[38,"polyhal_trap::trap"],[39,"core::panic::panic_info"],[40,"core::result"],[41,"core::any"],[42,"buddy_system_allocator"],[43,"spin"],[44,"virtio_drivers::transport::pci::bus"]],"i":"```````h`00`0`00`````000```````````","f":"`{{}b}0{{}d}0{df}0{{{j{h}}}l}`{j{{j{c}}}{}}{{{j{n}}}{{j{nc}}}{}}3{{{j{h}}l}f}`{cc{}}{{}c{}}{{{j{nA`}}Ab}f}7{{{j{Ad}}}Af}`8{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{jAj}{{}Al}{{}An}>{{}f}{{}B`}{{dd}f}{dl}{lf}{{{j{nBb}}BdBf}f}{Bff}6","D":"n","p":[[5,"PerCPU",35],[1,"usize"],[1,"unit"],[5,"PageAllocImpl",0],[1,"reference",null,null,1],[5,"PhysAddr",36],[0,"mut"],[5,"TrapFrame",37],[6,"TrapType",38],[5,"PanicInfo",39],[1,"never"],[6,"Result",40,null,1],[5,"TypeId",41],[5,"LockedHeap",42],[1,"array"],[8,"Mutex",43],[5,"PciRoot",44],[5,"DeviceFunction",44],[1,"u8"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABwAAgAAAA4AEwANAA==","P":[[9,"T"],[11,""],[14,"T"],[15,"U"],[16,""],[21,"U,T"],[22,"U"],[23,""]]}],["polyhal",{"t":"SEEEEEECCXXQQCCCCQCHCCCCCCQCCXQQQQCCQHHHSSHHHHHCSSSKMMHHSSSPGPPPPFPPHHNNNNNNNONNHONNNNNNFNNNNNNHNNNNNNNFTTTTTTTNNNNHNNNNNHNNNFNNNHNNNNNNHHHHFFNNNNNNNNNNNNNNNNNNNNNNNNNFGPPPNNNNNHHHHNNNNNNNNHNNNNNNHHHHHHHHTTTTTTTTFGTTTSTTTFFTTPFFTTTFTTTTTTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNHHNOHOHNNNOOOHHHHFFCNNNNNNNNNNNNNNNCNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNN","n":["MEM_VECTOR_CAPACITY","MappingFlags","MappingSize","PageTable","PageTableWrapper","PhysAddr","VirtAddr","acpi","apic","arch_entry","arch_interrupt","bit","bits","common","consts","ctor","debug_console","display_info","gdt","hart_id","idt","instruction","irq","kcontext","mem","multicore","pa","pagetable","percpu","","ph_ctor","print","println","pub_use_arch","timer","utils","va","get_pci_base","get_pm1a_addr","init","MAX_IRQ_COUNT","TIMER_IRQ_NUM","init","io_apic","local_apic","pic_eoi","raw_apic_id","vectors","APIC_ERROR_VECTOR","APIC_SPURIOUS_VECTOR","APIC_TIMER_VECTOR","PageAlloc","alloc","dealloc","get_cpu_num","init","PIC_VECTOR_OFFSET","SYSCALL_VECTOR","VIRT_ADDR_START","Cpu","CtorType","HALDriver","KernelService","Normal","Others","PHInitWrap","Platform","Primary","__start_ph_init","__stop_ph_init","borrow","","borrow_mut","","eq","from","","func","into","","ph_init_iter","priority","try_from","","try_into","","type_id","","DebugConsole","borrow","borrow_mut","enabled","flush","from","getchar","init_fb","into","log","putchar","try_from","try_into","type_id","write_str","GdtStruct","KCODE32_SELECTOR","KCODE64_SELECTOR","KDATA_SELECTOR","TSS_SELECTOR","UCODE32_SELECTOR","UCODE64_SELECTOR","UDATA_SELECTOR","borrow","borrow_mut","fmt","from","init","into","load","load_tss","new","pointer","set_tss_kernel_sp","try_from","try_into","type_id","IdtStruct","borrow","borrow_mut","from","init","into","load","new","try_from","try_into","type_id","ebreak","","shutdown","","IRQ","IRQVector","ack","borrow","","borrow_mut","","clone","clone_to_uninit","fmt","from","","int_disable","int_enable","int_enabled","into","","irq_disable","irq_enable","irq_num","new","try_from","","try_into","","type_id","","KContext","KContextArgs","KPC","KSP","KTP","blank","borrow","","borrow_mut","","context_switch","","context_switch_pt","","fmt","","from","","index","index_mut","into","","read_current_tp","try_from","","try_into","","type_id","","add_memory_region","alloc","get_fdt","get_mem_areas","init_dtb_once","parse_system_info","boot_core","","A","","Cache","D","","Device","G","","MappingFlags","MappingSize","P","","PAGE_LEVEL","PAGE_SIZE","","PCD","PS","PTE","PTEFlags","PTE_NUM_IN_PAGE","PWT","Page4KB","PageTable","PageTableWrapper","R","RW","RWX","TLB","U","URW","URWX","URX","US","USER_10","USER_11","USER_9","W","X","XD","all","","alloc","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","change","clone","","","clone_to_uninit","","","cmp","complement","","contains","","current","deref","difference","","drop","empty","","","eq","extend","","flush_all","flush_vaddr","fmt","","","","","","","","","","","","","from","","","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","hash","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","iter","","iter_names","","map_kernel","map_page","not","","partial_cmp","release","remove","","restore","root","set","","sub","","sub_assign","","symmetric_difference","","toggle","","translate","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","union","","unmap_page","PerCPUReserved","borrow","borrow_mut","from","get_local_thread_pointer","get_percpu_ptr","into","kernel_rsp","percpu_area_init","self_ptr","set_local_thread_pointer","try_from","try_into","type_id","user_context","user_rsp","valid_ptr","current_time","get_freq","get_ticks","set_next_timer","MutexNoIrq","MutexNoIrqGuard","addr","borrow","","borrow_mut","","deref","deref_mut","force_unlock","from","","into","","into_inner","is_locked","lock","new","percpu","try_from","","try_into","","try_lock","type_id","","PhysAddr","VirtAddr","add","","borrow","","borrow_mut","","ceil","clear_len","clone","","clone_to_uninit","","cmp","","eq","","floor","fmt","","","","from","","","get_cstr","","get_mut_ptr","","get_mut_ref","get_ptr","","get_ref","into","","new","","partial_cmp","","pn_index","pn_offest","raw","","slice_mut_with_len","","slice_until","slice_with_len","","try_from","","try_into","","type_id","","write_volatile","PerCPU","as_ref","borrow","borrow_mut","deref","from","get_mut_ptr","into","new","read","ref_mut","try_from","try_into","type_id","with","with_mut","write"],"q":[[0,"polyhal"],[37,"polyhal::acpi"],[40,"polyhal::apic"],[48,"polyhal::apic::vectors"],[51,"polyhal::common"],[56,"polyhal::consts"],[59,"polyhal::ctor"],[88,"polyhal::debug_console"],[103,"polyhal::gdt"],[125,"polyhal::idt"],[136,"polyhal::instruction"],[140,"polyhal::irq"],[167,"polyhal::kcontext"],[196,"polyhal::mem"],[202,"polyhal::multicore"],[204,"polyhal::pagetable"],[404,"polyhal::percpu"],[421,"polyhal::timer"],[425,"polyhal::utils"],[451,"polyhal::utils::addr"],[507,"polyhal::utils::percpu"],[524,"core::option"],[525,"x2apic::ioapic"],[526,"polyhal::utils::mutex_no_irq"],[527,"x2apic::lapic"],[528,"polyhal::components::common"],[529,"core::iter::traits::iterator"],[530,"core::result"],[531,"core::any"],[532,"log"],[533,"core::fmt"],[534,"polyhal::arch::x86_64::gdt"],[535,"x86_64::structures::tss"],[536,"x86_64::structures"],[537,"polyhal::arch::x86_64::idt"],[538,"polyhal::components::irq"],[539,"polyhal::components::kcontext::x86_64"],[540,"polyhal::components::kcontext"],[541,"fdt_parser::fdt"],[542,"fdt_parser::error"],[543,"polyhal::pagetable::x86_64"],[544,"core::cmp"],[545,"core::iter::traits::collect"],[546,"core::hash"],[547,"bitflags::iter"],[548,"polyhal::components::percpu::x86_64"],[549,"core::time"],[550,"core::marker"],[551,"core::ffi::c_str"],[552,"core::clone"],[553,"core::ops::function"],[554,"polyhal::arch"],[555,"polyhal::arch::x86_64"],[556,"polyhal_macro"],[557,"polyhal::components"],[558,"polyhal::arch::x86_64::acpi"],[559,"polyhal::arch::x86_64::apic"],[560,"polyhal::arch::x86_64::apic::vectors"],[561,"polyhal::arch::x86_64::consts"],[562,"polyhal::components::instruction::x86_64"],[563,"polyhal::components::multicore::x86_64"],[564,"polyhal::components::percpu"],[565,"polyhal::components::timer"],[566,"polyhal::components::timer::x86_64"]],"i":"````````````````````````````````````````````````````Ah0`````Aj`0000`00``An101101001`0010101`Bj00000`0000000`Cd0000000000`00000`000`Cl00`000000``````D`Gj10111101000010011010101``Df00Db0101````01010001`010101````````DnE`110110``10Dd`011``01En``323`3333222233232Eb4343434344334343GlEf46325104632540460466656542652065665110466666325555104663255656655656565665656510463256565656565446564654465656565654104632510463251046325654`Ff00``00`0`000000```````lFj1000110101111`1010110``dEl1010011010101001100100101001001010100010100101010101`Gd000000000000000","f":"{{}b}``````````````````0`````````````````{{}{{f{d}}}}{{}{{f{b}}}}{{}h}330{{}{{n{{l{j}}}}}}{{}{{n{A`Ab}}}}2{AdAf}`{{}Ad}00`{{{n{Ah}}}d}{{{n{Ah}}d}h}9{{{n{Ah}}}h}3::`````````77{n{{n{c}}}{}}0{{{n{A`}}}{{n{A`c}}}{}}0{{{n{Aj}}{n{Aj}}}Al}{cc{}}0{AnB`}{{}c{}}0{Aj{{`{{Bd{}{{Bb{{n{An}}}}}}}}}}{AnAj}{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{nBh}0`:9{{{n{Bj}}{n{Bl}}}Al}{{{n{Bj}}}h}9{{}{{f{Ad}}}}{{bbbb}h}9{{{n{Bj}}{n{Bn}}}h}{Adh}876{{{n{A`Bj}}{n{C`}}}Cb}````````{n{{n{c}}}{}}{{{n{A`}}}{{n{A`c}}}{}}{{{n{Cd}}{n{A`Cf}}}Cb}{cc{}}{{}h}{{}c{}}{{{n{Cd}}}h}0{{{n{Ch}}}Cd}{{{n{Cd}}}Cj}{bh}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{nBh}`<;987{{{n{Cl}}}h}{{}Cl}432::{{}Cn}0``{{{n{D`}}}h}{n{{n{c}}}{}}0{{{n{A`}}}{{n{A`c}}}{}}0{{{n{D`}}}D`}{{nAd}h}{{{n{D`}}{n{A`Cf}}}Cb}{cc{}}0{{}h}0{{}Al}{{}c{}}0{bh}0{{{n{D`}}}b}{bD`}{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{nBh}0`````{{}Db}??>>{{DbDb}h}0{{DbDbDd}h}0{{{n{Db}}{n{A`Cf}}}Cb}{{{n{Df}}{n{A`Cf}}}Cb}>>{{{n{Db}}Df}{{n{c}}}{}}{{{n{A`Db}}Df}{{n{A`c}}}{}}=={{}b}::9988{{bb}h}{bAd}{{}{{Bf{DhDj}}}}{{}{{`{{Bd{}{{Bb{{n{{Dl{bb}}}}}}}}}}}}{d{{Bf{hDj}}}}{{}h}{{bbb}h}0`````````````7`````````````````````````{{}Dn}{{}E`}{{}Eb}{{DnDn}Dn}{{E`E`}E`}{{{n{A`Dn}}Dn}h}{{{n{A`E`}}E`}h}3210{{{n{Dn}}}Ed}0{{{n{E`}}}Ed}05432{n{{n{c}}}{}}000000{{{n{A`}}}{{n{A`c}}}{}}000000{{{n{Dd}}}h}{{{n{Ef}}}Ef}{{{n{Dd}}}Dd}{{{n{Dn}}}Dn}{{nAd}h}00{{{n{Dn}}{n{Dn}}}Eh}{DnDn}{E`E`}{{{n{Dn}}Dn}Al}{{{n{E`}}E`}Al}{{}Dd}{{{n{Eb}}}{{n{c}}}{}}{{DnDn}Dn}{{E`E`}E`}{{{n{A`Eb}}}h}{{}Ef}{{}Dn}{{}E`}{{{n{Dn}}{n{Dn}}}Al}{{{n{A`Dn}}c}h{{Ej{}{{Bb{Dn}}}}}}{{{n{A`E`}}c}h{{Ej{}{{Bb{E`}}}}}}{{}h}{Elh}{{{n{Ef}}{n{A`Cf}}}Cb}{{{n{Dd}}{n{A`Cf}}}Cb}{{{n{Dn}}{n{A`Cf}}}Cb}0000{{{n{En}}{n{A`Cf}}}Cb}{{{n{Eb}}{n{A`Cf}}}Cb}{{{n{E`}}{n{A`Cf}}}Cb}000{cc{}}00{E`Dn}111{DnE`}2{Ed{{f{Dn}}}}{Ed{{f{E`}}}}{EdDn}0{EdE`}010{cDn{{Ej{}{{Bb{Dn}}}}}}{cE`{{Ej{}{{Bb{E`}}}}}}{{{n{C`}}}{{f{Dn}}}}{{{n{C`}}}{{f{E`}}}}{{{n{Dn}}{n{A`c}}}hF`}{{{n{A`Dn}}Dn}h}{{{n{A`E`}}E`}h}{{DnDn}Dn}{{E`E`}E`}{{{n{Dn}}Dn}Al}{{{n{E`}}E`}Al}{{}c{}}000000{Dnc{}}{E`c{}}{{{n{Dn}}}Al}{{{n{E`}}}Al}10{{{n{Dn}}}{{Fb{Dn}}}}{{{n{E`}}}{{Fb{E`}}}}{{{n{Dn}}}{{Fd{Dn}}}}{{{n{E`}}}{{Fd{E`}}}}{{{n{Dd}}EldDnEn}h}0{DnDn}{E`E`}{{{n{Dn}}{n{Dn}}}{{f{Eh}}}}{{{n{Dd}}}h}{{{n{A`Dn}}Dn}h}{{{n{A`E`}}E`}h}2{{{n{Dd}}}d}{{{n{A`Dn}}DnAl}h}{{{n{A`E`}}E`Al}h}{{DnDn}Dn}{{E`E`}E`}651065{{{n{Dd}}El}{{f{{Dl{dDn}}}}}}{c{{Bf{e}}}{}{}}000000{{}{{Bf{c}}}{}}000000{nBh}00000054{{{n{Dd}}El}h}`{n{{n{c}}}{}}{{{n{A`}}}{{n{A`c}}}{}}{cc{}}{{}b}0{{}c{}}{Ffb}{{bAd}b}1{bh};:9222{{}Fh}{{}Ed}0{Fhh}```::99{{{n{{Fj{c}}}}}{{n{c}}}Fl}{{{n{A`{Fj{c}}}}}{{n{A`c}}}Fl}{{{n{{l{c}}}}}hFl};;99{{{l{c}}}c{}}{{{n{{l{c}}}}}AlFl}{{{n{{l{c}}}}}{{Fj{c}}}Fl}{c{{l{c}}}{}}`{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{{{n{{l{c}}}}}{{f{{Fj{c}}}}}Fl}{nBh}0``{{db}c{}}{{Elb}c{}}{n{{n{c}}}{}}0{{{n{A`}}}{{n{A`c}}}{}}0{{{n{El}}}El}{{{n{d}}b}h}{{{n{d}}}d}2{{nAd}h}0{{{n{d}}{n{d}}}Eh}{{{n{El}}{n{El}}}Eh}{{{n{d}}{n{d}}}Al}{{{n{El}}{n{El}}}Al}7{{{n{d}}{n{A`Cf}}}Cb}0{{{n{El}}{n{A`Cf}}}Cb}0{cc{}}{bEl}1{{{n{d}}}{{n{Fn}}}}{{{n{El}}}{{n{Fn}}}}{{{n{d}}}}{{{n{El}}}}{{{n{El}}}{{n{A`c}}}{}}21{{{n{El}}}{{n{c}}}{}}{{}c{}}0{bd}8{{{n{d}}{n{d}}}{{f{Eh}}}}{{{n{El}}{n{El}}}{{f{Eh}}}}{{{n{El}}b}b}0{{{n{d}}}b}{{{n{El}}}b}{{{n{d}}b}{{n{A`{G`{c}}}}}Fl}{{{n{El}}b}{{n{A`{G`{c}}}}}{}}{{{n{El}}{B`{c}{{Gb{Al}}}}}{{n{A`{G`{c}}}}}{}}{{{n{d}}b}{{n{{G`{c}}}}}{}}{{{n{El}}b}{{n{{G`{c}}}}}{}}{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{nBh}0{{{n{d}}c}h{}}`{{{n{{Gd{c}}}}}{{n{c}}}{}}{n{{n{c}}}{}}{{{n{A`}}}{{n{A`c}}}{}}{{{n{{Gd{c}}}}}{{n{e}}}{}{}}{cc{}}{{{n{{Gd{c}}}}}{}{}}{{}c{}}{{}{{Gd{c}}}{}}{{{n{{Gd{c}}}}}cGf}{{{n{{Gd{c}}}}}{{n{A`c}}}{}}=<;{{{n{{Gd{c}}}}g}e{}{}{{Gh{{n{c}}}{{Gb{e}}}}}}{{{n{{Gd{c}}}}g}e{}{}{{Gh{{n{A`c}}}{{Gb{e}}}}}}{{{n{{Gd{c}}}}c}h{}}","D":"ANl","p":[[1,"usize"],[5,"PhysAddr",451],[6,"Option",524,null,1],[1,"unit"],[5,"IoApic",525],[5,"MutexNoIrq",425,526],[1,"reference",null,null,1],[0,"mut"],[5,"LocalApic",527],[1,"u8"],[1,"u32"],[10,"PageAlloc",51,528],[6,"CtorType",59],[1,"bool"],[5,"PHInitWrap",59],[1,"fn"],[17,"Item"],[10,"Iterator",529],[6,"Result",530,null,1],[5,"TypeId",531],[5,"DebugConsole",88],[5,"Metadata",532],[5,"Record",532],[1,"str"],[8,"Result",533],[5,"GdtStruct",103,534],[5,"Formatter",533],[5,"TaskStateSegment",535],[5,"DescriptorTablePointer",536],[5,"IdtStruct",125,537],[1,"never"],[5,"IRQVector",140,538],[5,"KContext",167,539],[5,"PageTable",204],[6,"KContextArgs",167,540],[5,"Fdt",541],[6,"FdtError",542],[1,"tuple",null,null,1],[5,"MappingFlags",204],[5,"PTEFlags",204,543],[5,"PageTableWrapper",204],[1,"u64"],[5,"PTE",204],[6,"Ordering",544],[10,"IntoIterator",545],[5,"VirtAddr",451],[6,"MappingSize",204],[10,"Hasher",546],[5,"Iter",547],[5,"IterNames",547],[5,"PerCPUReserved",404,548],[5,"Duration",549],[5,"MutexNoIrqGuard",425,526],[10,"Sized",550],[5,"CStr",551],[1,"slice"],[17,"Output"],[5,"PerCPU",507],[10,"Clone",552],[10,"Fn",553],[5,"IRQ",140],[5,"TLB",204]],"r":[[0,554],[1,204],[2,204],[3,204],[4,204],[5,451],[6,451],[7,555],[8,555],[9,556],[10,556],[13,557],[14,555],[18,555],[19,555],[20,555],[21,557],[22,557],[23,557],[25,557],[28,557],[29,556],[34,557],[37,558],[38,558],[39,558],[40,559],[41,559],[42,559],[43,559],[44,559],[45,559],[46,559],[47,559],[48,560],[49,560],[50,560],[51,528],[52,528],[53,528],[54,528],[55,528],[56,561],[57,561],[58,561],[103,534],[104,534],[105,534],[106,534],[107,534],[108,534],[109,534],[110,534],[111,534],[112,534],[113,534],[114,534],[115,534],[116,534],[117,534],[118,534],[119,534],[120,534],[121,534],[122,534],[123,534],[124,534],[125,537],[126,537],[127,537],[128,537],[129,537],[130,537],[131,537],[132,537],[133,537],[134,537],[135,537],[136,562],[137,562],[138,562],[139,562],[140,538],[141,538],[142,538],[144,538],[146,538],[147,538],[148,538],[149,538],[151,538],[156,538],[159,538],[160,538],[162,538],[164,538],[166,538],[167,539],[168,540],[169,540],[170,540],[171,540],[172,539],[173,539],[174,540],[175,539],[176,540],[177,539],[178,539],[179,539],[180,539],[181,539],[182,540],[183,539],[184,540],[185,539],[186,539],[187,539],[188,540],[189,539],[190,539],[191,540],[192,539],[193,540],[194,539],[195,540],[202,563],[203,563],[205,543],[208,543],[211,543],[215,543],[219,543],[220,543],[222,543],[224,543],[229,543],[236,543],[237,543],[238,543],[239,543],[242,543],[244,543],[247,543],[249,543],[251,543],[253,543],[256,543],[257,543],[259,543],[261,543],[268,543],[275,543],[285,543],[287,543],[291,543],[295,543],[298,543],[310,543],[311,543],[312,543],[313,543],[321,543],[322,543],[324,543],[327,543],[328,543],[330,543],[332,543],[334,543],[337,543],[339,543],[341,543],[348,543],[350,543],[352,543],[354,543],[356,543],[358,543],[362,543],[366,543],[370,543],[372,543],[374,543],[376,543],[378,543],[386,543],[393,543],[400,543],[402,543],[404,548],[405,548],[406,548],[407,548],[408,564],[409,564],[410,548],[411,548],[412,564],[413,548],[414,564],[415,548],[416,548],[417,548],[418,548],[419,548],[420,548],[421,565],[422,566],[423,566],[424,566],[425,526],[426,526],[428,526],[429,526],[430,526],[431,526],[432,526],[433,526],[434,526],[435,526],[436,526],[437,526],[438,526],[439,526],[440,526],[441,526],[442,526],[444,526],[445,526],[446,526],[447,526],[448,526],[449,526],[450,526]],"b":[[254,"impl-MappingFlags"],[255,"impl-Flags-for-MappingFlags"],[256,"impl-PTEFlags"],[257,"impl-Flags-for-PTEFlags"],[303,"impl-UpperHex-for-MappingFlags"],[304,"impl-Binary-for-MappingFlags"],[305,"impl-Debug-for-MappingFlags"],[306,"impl-LowerHex-for-MappingFlags"],[307,"impl-Octal-for-MappingFlags"],[310,"impl-Octal-for-PTEFlags"],[311,"impl-Binary-for-PTEFlags"],[312,"impl-LowerHex-for-PTEFlags"],[313,"impl-UpperHex-for-PTEFlags"],[325,"impl-Flags-for-MappingFlags"],[326,"impl-MappingFlags"],[327,"impl-Flags-for-PTEFlags"],[328,"impl-PTEFlags"],[470,"impl-Display-for-PhysAddr"],[471,"impl-Debug-for-PhysAddr"],[472,"impl-Debug-for-VirtAddr"],[473,"impl-Display-for-VirtAddr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABYBPwAAAAsADQADABMAAgAZAAAAGwABAB4AAAAiAAAAJAABACcAAQAtAAAALwAEADoAAQBHAAQAUwAKAF8AAABiAAUAcAACAHQAAAB6AAMAfwABAIIAAACGAAIAiwADAJAABgChAAYArgADALYAAQC6AAEAvwAFAMsAAQDZAAAA3wABAOIAAAAAAQAAAgEAAAcBFQAhAQEAJQEBACkBAAAuAQwAPgEAAEIBAABGAQAASAEAAFABAABeAQEAbAEAAHABAAB9ARQAlgEBAJoBAACcAQAAngEAAKABBQCqAQAArAEGALgBIgDcAQAA3gEHAOgBAwDuARIAAgIAAAQCCAA=","P":[[70,"T"],[74,""],[75,"T"],[77,""],[78,"U"],[80,""],[82,"U,T"],[84,"U"],[86,""],[89,"T"],[91,""],[93,"T"],[94,""],[96,"U"],[97,""],[99,"U,T"],[100,"U"],[101,""],[111,"T"],[113,""],[114,"T"],[115,""],[116,"U"],[117,""],[122,"U,T"],[123,"U"],[124,""],[126,"T"],[129,""],[130,"U"],[131,""],[133,"U,T"],[134,"U"],[135,""],[143,"T"],[147,""],[150,"T"],[152,""],[155,"U"],[157,""],[161,"U,T"],[163,"U"],[165,""],[173,"T"],[177,""],[183,"T"],[185,"Index::Output"],[187,"U"],[189,""],[190,"U,T"],[192,"U"],[194,""],[262,"T"],[276,""],[289,"Deref::Target"],[290,""],[297,"T"],[299,""],[314,"T"],[317,""],[318,"T"],[321,""],[322,"T"],[323,""],[331,"T"],[333,""],[335,"__H"],[336,""],[342,"U"],[349,"IntoIterator::IntoIter"],[351,""],[380,"U,T"],[387,"U"],[394,""],[405,"T"],[408,""],[410,"U"],[411,""],[415,"U,T"],[416,"U"],[417,""],[428,"T"],[437,"U"],[439,"T"],[444,"U,T"],[446,"U"],[448,"T"],[449,""],[453,"Add::Output"],[455,"T"],[459,""],[474,"T"],[475,""],[476,"T"],[477,""],[481,"T"],[482,""],[484,"T"],[485,"U"],[487,""],[495,"T"],[500,"U,T"],[502,"U"],[504,""],[506,"T"],[511,"T,Deref::Target"],[512,"T"],[514,"U"],[515,"T"],[518,"U,T"],[519,"U"],[520,""],[521,"T,R,F"],[523,"T"]]}],["polyhal_boot",{"t":"Q","n":["define_entry"],"q":[[0,"polyhal_boot"]],"i":"`","f":"`","D":"d","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["polyhal_macro",{"t":"XXQX","n":["arch_entry","arch_interrupt","define_arch_mods","percpu"],"q":[[0,"polyhal_macro"]],"i":"````","f":"````","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAAAAQACAAMABAA=","P":[]}],["polyhal_trap",{"t":"CCPGPPPPPPPPPPPPGPNNNNNNNNNNNNNNHHNNHHNNNNNNHHPPPFPPPPPPSFGNNNNNNNNNNNONNOOOONNNONNNNOOOOONNNNNOONOOOOOOOOOOOOOOOOOOOONNNNNNNNNNOO","n":["trap","trapframe","Breakpoint","EscapeReason","IRQ","IllegalInstruction","InstructionPageFault","Irq","LoadPageFault","NoReason","StorePageFault","SupervisorExternal","SysCall","","Timer","","TrapType","Unknown","borrow","","borrow_mut","","clone","","clone_to_uninit","","eq","fmt","","from","","","init","init_syscall","into","","kernelvec","run_user_task","try_from","","try_into","","type_id","","user_restore","uservec","ARG0","ARG1","ARG2","FxsaveArea","RA","RET","SEPC","SP","SYSCALL","TLS","TRAPFRAME_SIZE","TrapFrame","TrapFrameArgs","args","borrow","","","borrow_mut","","","clone","","clone_to_uninit","","cs","default","","error_code","fcw","fdp","fip","fmt","","","fop","from","","","from_user","fs_base","fsw","ftw","fx_area","gs_base","index","index_mut","into","","","mxcsr","mxcsr_mask","new","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","rflags","rip","rsi","rsp","ss","st","syscall_ok","try_from","","","try_into","","","type_id","","","vector","xmm"],"q":[[0,"polyhal_trap"],[2,"polyhal_trap::trap"],[46,"polyhal_trap::trapframe"],[130,"core::fmt"],[131,"polyhal_trap::trapframe::x86_64"],[132,"core::result"],[133,"core::any"],[134,"polyhal_trap::trap::x86_64"]],"i":"``f`h11110111010`110101010010100``10``101010``Bd00`000000```AdAn210210101101100002100211100111102100111111111111111111110102102102110","f":"``````````````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{f}}}f}{{{b{h}}}h}{{bj}l}0{{{b{h}}{b{h}}}n}{{{b{f}}{b{dA`}}}Ab}{{{b{h}}{b{dA`}}}Ab}{cc{}}0{fh}{{}l}0{{}c{}}01{{{b{dAd}}}h}{c{{Af{e}}}{}{}}0{{}{{Af{c}}}{}}0{bAh}0{Adl}6``````````{{}Aj}``{{{b{Ad}}}{{Al{Aj}}}}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{An}}}An}{{{b{Ad}}}Ad}{{bj}l}0{AdAj}{{}An}{{}Ad}2{AnB`}{AnBb}0{{{b{An}}{b{dA`}}}Ab}{{{b{Bd}}{b{dA`}}}Ab}{{{b{Ad}}{b{dA`}}}Ab}4{cc{}}00{{{b{Ad}}}n}966{AdAn}:{{{b{Ad}}Bd}{{b{c}}}{}}{{{b{dAd}}Bd}{{b{dc}}}{}}{{}c{}}00{AnBf}0<>>>>>>>>>>>>>>>>>>>{AnAl}{{{b{dAd}}}l}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{bAh}00{AdAj}5","D":"Bf","p":[[1,"reference",null,null,1],[0,"mut"],[6,"TrapType",2],[6,"EscapeReason",2],[1,"u8"],[1,"unit"],[1,"bool"],[5,"Formatter",130],[8,"Result",130],[5,"TrapFrame",46,131],[6,"Result",132,null,1],[5,"TypeId",133],[1,"usize"],[1,"array"],[5,"FxsaveArea",46,131],[1,"u16"],[1,"u64"],[6,"TrapFrameArgs",46],[1,"u32"]],"r":[[32,134],[33,134],[36,134],[37,134],[44,134],[45,134],[49,131],[57,131],[59,131],[60,131],[62,131],[63,131],[65,131],[66,131],[67,131],[68,131],[69,131],[70,131],[71,131],[72,131],[73,131],[74,131],[75,131],[76,131],[77,131],[79,131],[80,131],[81,131],[83,131],[84,131],[85,131],[86,131],[87,131],[88,131],[89,131],[90,131],[91,131],[92,131],[94,131],[95,131],[96,131],[97,131],[98,131],[99,131],[100,131],[101,131],[102,131],[103,131],[104,131],[105,131],[106,131],[107,131],[108,131],[109,131],[110,131],[111,131],[112,131],[113,131],[114,131],[115,131],[116,131],[117,131],[118,131],[119,131],[121,131],[122,131],[124,131],[125,131],[127,131],[128,131],[129,131]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAG8ACAAAAAAAAwAaACAAAgAnAAYALwAJADwAFQBWAAYAYAAiAA==","P":[[18,"T"],[22,""],[29,"T"],[31,""],[34,"U"],[36,""],[38,"U,T"],[40,"U"],[42,""],[60,"T"],[66,""],[81,"T"],[84,""],[90,"Index::Output"],[92,"U"],[95,""],[119,"U,T"],[122,"U"],[125,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[1669,16682,163,241,3421]}