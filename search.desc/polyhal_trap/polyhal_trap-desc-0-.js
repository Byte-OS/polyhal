searchState.loadedDescShard("polyhal_trap", 0, "Define and initialize the trap handler.\nTrapframe module.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKernel Trap Entry\nReturn Some(()) if it was interrupt by syscall, otherwise …\nUser Trap Entry\nThe size of the TrapFrame\nSaved registers when a trap (interrupt or exception) …\nTrap Frame Arg Type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCheck if the trapframe was from user.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")